{"version":3,"file":"hook-stash.es.js","sources":["../domain/di.ts","../packages/di/createServiceComponent.tsx","../packages/di/useServiceHook.ts","../packages/common/useDebounceCallback.ts","../packages/common/usePrevious.ts","../packages/common/useRefState.ts","../packages/common/useHistoryState.ts","../packages/common/useUpdateEffect.ts","../packages/common/useWatchEffect.ts","../domain/http.ts","../packages/http/useHttp.ts"],"sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport interface ServiceHook<C> {\r\n  (): C;\r\n  token?: symbol;\r\n}\r\n\r\n\r\nexport const SERVICE_CONTEXT = createContext<any>(null);\r\nexport const CACHE_MAP = {} as Record<symbol, any>;","import React, { PropsWithChildren } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { CACHE_MAP, ServiceHook, SERVICE_CONTEXT } from \"../../domain/di\";\r\n\r\nexport function createServiceComponent<C = {[prop: string]: any}>(Comp: React.FC<C>, hooks: ServiceHook<unknown>[]) {\r\n  return React.memo((props: PropsWithChildren<C>) => {\r\n    const topContextVal = useContext(SERVICE_CONTEXT);\r\n    let dependsMap      =  {} as any;\r\n    if(topContextVal) dependsMap = Object.create(topContextVal) ;\r\n\r\n    /** 初始化执行service hooks 并将调用结果存入dependsMap与CACHE_MAP */\r\n    for(let hook of hooks) {   \r\n      if(!hook.token) hook.token = Symbol(hook.name);\r\n      const token = hook.token as symbol;  \r\n      const res = hook();      \r\n      dependsMap[token] = res;\r\n      CACHE_MAP[token]  = dependsMap[token]\r\n    }\r\n\r\n    /** 将service hooks遍历执行完毕后，需要立即清除在CACHE_MAP中缓存的依赖 */\r\n    hooks.forEach(hook => {\r\n      if(CACHE_MAP[hook.token]) delete CACHE_MAP[hook.token];\r\n    })\r\n\r\n    return (\r\n      <SERVICE_CONTEXT.Provider value={ dependsMap }>\r\n        <Comp {...props} />\r\n      </SERVICE_CONTEXT.Provider>\r\n    )\r\n  })\r\n}\r\n\r\n","import { useContext } from \"react\";\r\nimport { CACHE_MAP, ServiceHook, SERVICE_CONTEXT } from \"../../domain/di\";\r\n\r\nexport function useServiceHook<C>(input: ServiceHook<C> | symbol, optional: 'optional'): C | null;\r\nexport function useServiceHook<C>(input: ServiceHook<C> | symbol): C;\r\nexport function useServiceHook<C>(input: ServiceHook<C> | symbol, optional?: 'optional') {\r\n  const token = typeof input === 'symbol' ? input : input.token;\r\n  const contextVal = useContext(SERVICE_CONTEXT);\r\n  const depends = contextVal ? contextVal[token] : CACHE_MAP[token];\r\n  if(depends) {\r\n    return depends\r\n  } else if(optional === 'optional') {\r\n    return null\r\n  } else {\r\n    throw new Error(`未找到${name}的依赖值，请在上层servcieComponent中提供对应的service hook`)\r\n  }\r\n}","import { useCallback, useRef } from \"react\";\r\n\r\n/**\r\n * @description 防抖函数\r\n * @param callback 初始回调函数\r\n * @param deps 依赖值\r\n * @param debounceTime 防抖时间\r\n * @returns debouncer \r\n */\r\nexport function useDebounceCallback<T extends []>(callback: (...params: T) => void, deps: unknown[], debounceTime: number) {\r\n\r\n  const timeRef = useRef<NodeJS.Timeout>(null);\r\n  const runner  = useCallback(callback, deps);\r\n\r\n  const debouncer = (...params:T) => {\r\n    clearTimeout(timeRef.current);\r\n    const runTimeout = () => {\r\n      return setTimeout(() => { runner(...params) }, debounceTime)\r\n    }\r\n    timeRef.current = runTimeout();\r\n  }\r\n\r\n  return debouncer;\r\n}","import { useRef } from \"react\";\r\n\r\n/**\r\n * @description 将最近两次变化的值并返回(只有输入值变化时，返回值才会相应地更新)\r\n * @param state 状态变量（建议为useState函数返回的变量）\r\n * @returns 上一个值\r\n */\r\nexport function usePrevious<T>(state: T) {\r\n  const prevRef = useRef<T>();\r\n  const curRef = useRef<T>();\r\n\r\n  if(curRef.current !== state) {\r\n    prevRef.current = curRef.current;\r\n    curRef.current = state;\r\n  }  \r\n\r\n  return prevRef.current;\r\n}","import { useState } from \"react\";\r\n\r\n/**\r\n * @description 使用引用类型的状态变量，并返回状态值和状态变更函数\r\n * @param refState \r\n * @returns \r\n */\r\nexport function useRefState<T extends object>(refState: T): [T, (v: Partial<T>) => void] {\r\n  const [state, setState] = useState(refState);\r\n\r\n  const setRefState = (newV: Partial<T>) => {\r\n    setState(oldV => ({ ...oldV, ...newV }));\r\n  }\r\n\r\n  return [state, setRefState]\r\n}","import { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * @description 保存状态的历史变化记录\r\n * @param state 状态变量\r\n * @returns state历史值，最新值在末尾\r\n */\r\nexport function useHistoryState<T>(state: T) {\r\n  const [logs, setLogs] = useState<T[]>([]);\r\n\r\n  useEffect(() => {\r\n    setLogs(logs => logs.concat([state]))\r\n  }, [state])\r\n\r\n  return logs\r\n}","import { useEffect, useRef } from \"react\";\r\nimport { usePrevious } from \"./usePrevious\";\r\n\r\n/**\r\n * @description 依赖值更新时执行副作用函数（忽略组件第一次渲染后的副作用），并将每个依赖上一次变更的值传给副作用函数\r\n * @param callback 要执行的回调函数\r\n * @param deps 状态依赖\r\n */\r\nexport function useUpdateEffect(callback: ((changes?: unknown[]) => () => void) | ((changes?: unknown[]) => void), deps: unknown[]) {\r\n  const counter = useRef(0);\r\n  const changesRef = useRef([]) ;\r\n  \r\n  deps.forEach((dep, index) => {\r\n    changesRef.current[index] = usePrevious(dep)\r\n  })\r\n\r\n  useEffect(() => {\r\n    counter.current ++;\r\n    if(counter.current == 1) return;\r\n    return callback(changesRef.current);\r\n  }, deps)\r\n}","import { useEffect, useRef } from \"react\";\r\n\r\n/**\r\n * @description 依赖值更新时执行的副作用函数，并将函数上一次调用时的所有依赖值传给当前调用(注意与useUpdateEffect的区别)\r\n * @param callback 要执行的回调函数\r\n * @param deps 状态依赖\r\n */\r\nexport function useWatchEffect(callback: ((changes?: unknown[]) => () => void) | ((changes?: unknown[]) => void), deps: unknown[]) {\r\n  const runCount = useRef(0);\r\n  const caches = useRef([]);\r\n\r\n  useEffect(() => {\r\n    caches.current.push(deps);    \r\n    runCount.current ++;\r\n    if(runCount.current  === 1) return;\r\n    return callback(caches.current.shift());    \r\n  }, deps)\r\n}","\r\nexport interface HttpIntercept {\r\n  /** http请求拦截器 */\r\n  requestIntercept?: (request: RequestOptions) => Promise<RequestOptions>;\r\n  /** http响应拦截器 */\r\n  responseIntercept?: (res: any) => Promise<any>;\r\n}\r\nexport interface RequesterFunc {\r\n  (input: string, opt?: RequestOptions): Promise<Record<string, any>>;\r\n}\r\n\r\nexport interface RequestOptions {\r\n  url: string;\r\n  reqData: any;\r\n  auto: boolean;\r\n  method: 'GET' | 'POST' | 'PUT' | 'HEAD' | 'DELETE';\r\n  headers: any;\r\n  [prop: string]: any;\r\n}\r\n\r\n\r\nexport type HttpState = 'ready' | 'pending' | 'refreshing' | 'success' | 'failed';\r\n\r\nexport const HTTP_INTERCEPT = Symbol('供useHttp使用的请求拦截器');\r\nexport const CUSTOME_REQUEST = Symbol('自定义请求函数，以覆盖默认的fetch函数');","import { useEffect, useState } from \"react\";\r\nimport { CUSTOME_REQUEST, HttpIntercept, HttpState, HTTP_INTERCEPT, RequesterFunc, RequestOptions } from \"../../domain/http\";\r\nimport { useServiceHook } from \"../di/useServiceHook\";\r\n\r\nconst DEFAULT_HTTP_OPTIONS: Partial<RequestOptions> = {\r\n  auto: true,\r\n  method: 'GET',\r\n  reqData: {}\r\n}\r\n\r\n/**\r\n * @description ajax请求，默认通过fetch发送请求，可通过di依赖注入提供自定义请求方法覆盖\r\n * @param url \r\n * @param options \r\n * @returns \r\n */\r\nexport function useHttp<T>(\r\n  url: string, options: Partial<RequestOptions> = {}\r\n): [(query?: any) => Promise<void | T>, T, HttpState, any] {\r\n\r\n  /** 设置请求配置以及上层组件注入进来的依赖项 */\r\n  const localOption   = Object.assign(Object.create(DEFAULT_HTTP_OPTIONS), options, { url });\r\n  const intercept     = useServiceHook<HttpIntercept>(HTTP_INTERCEPT, 'optional');\r\n  const customeReq    = useServiceHook<RequesterFunc>(CUSTOME_REQUEST, 'optional');\r\n\r\n  /** 定义http请求的相关状态变量 */\r\n  const [res, setRes]        = useState<T>();\r\n  const [err, setErr]        = useState<any>();\r\n  const [state, setState]    = useState<HttpState>('ready');  \r\n\r\n  const request = (query: any = {}) => {\r\n    setState('pending');\r\n    return new Promise<RequestOptions>(resolve => {\r\n      if(intercept?.requestIntercept) {\r\n        intercept.requestIntercept(localOption).then(final => resolve(final))\r\n      } else resolve(localOption)\r\n    })\r\n    .then(options => {\r\n      let reqData = {...options.reqData, ...query};\r\n      let url = options.url;\r\n      if(customeReq) {\r\n        return customeReq(url, {...options, reqData})\r\n      } else {\r\n        return fetch(url, {...options, body: JSON.stringify(options.reqData)})\r\n      }\r\n    })\r\n    .then(response => {\r\n      const res = response;\r\n      const resIntercept = intercept?.responseIntercept\r\n      if(customeReq) {\r\n        return resIntercept ? resIntercept(res) : res;\r\n      } else {\r\n        return res.json().then((re: any) => resIntercept ? resIntercept(re) : re)\r\n      }\r\n    })\r\n    .then(res => {\r\n      setRes(res);\r\n      setState('success');\r\n      return res as T;\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      setState('failed');\r\n      setErr(err);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(options.auto) request()\r\n  }, [])\r\n\r\n  return [request, res, state, err]\r\n} "],"names":[],"mappings":"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"}