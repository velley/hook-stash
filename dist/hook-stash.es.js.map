{"version":3,"file":"hook-stash.es.js","sources":["../domain/di.ts","../packages/di/createServiceComponent.tsx","../packages/di/useServiceHook.ts","../packages/common/useDebounceCallback.ts","../packages/common/usePrevious.ts","../packages/common/useRefState.ts","../packages/common/useReactive.ts","../packages/common/useUpdateEffect.ts"],"sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport interface ServiceHook<C> {\r\n  (): C;\r\n  token?: symbol;\r\n}\r\n\r\n\r\nexport const SERVICE_CONTEXT = createContext<any>(null);\r\nexport const CACHE_MAP = {} as Record<symbol, any>;","import React, { PropsWithChildren } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { CACHE_MAP, ServiceHook, SERVICE_CONTEXT } from \"../../domain/di\";\r\n\r\nexport function createServiceComponent<C = {[prop: string]: any}>(Comp: React.FC<C>, hooks: ServiceHook<unknown>[]) {\r\n  return React.memo((props: PropsWithChildren<C>) => {\r\n    const topContextVal = useContext(SERVICE_CONTEXT);\r\n    let dependsMap      =  {} as any;\r\n    if(topContextVal) dependsMap = Object.create(topContextVal) ;\r\n\r\n    /** 初始化执行service hooks 并将调用结果存入dependsMap与CACHE_MAP */\r\n    for(let hook of hooks) {   \r\n      if(!hook.token) hook.token = Symbol(hook.name);\r\n      const token = hook.token as symbol;  \r\n      const res = hook();      \r\n      dependsMap[token] = res;\r\n      CACHE_MAP[token]  = dependsMap[token]\r\n    }\r\n\r\n    /** 将service hooks遍历执行完毕后，需要立即清除在CACHE_MAP中缓存的依赖 */\r\n    hooks.forEach(hook => {\r\n      if(CACHE_MAP[hook.token]) delete CACHE_MAP[hook.token];\r\n    })\r\n\r\n    return (\r\n      <SERVICE_CONTEXT.Provider value={ dependsMap }>\r\n        <Comp {...props} />\r\n      </SERVICE_CONTEXT.Provider>\r\n    )\r\n  })\r\n}\r\n\r\n","import { useContext } from \"react\";\r\nimport { CACHE_MAP, ServiceHook, SERVICE_CONTEXT } from \"../../domain/di\";\r\n\r\nexport function useServiceHook<C>(input: ServiceHook<C> | symbol, optional: 'optional'): C | null;\r\nexport function useServiceHook<C>(input: ServiceHook<C> | symbol): C;\r\nexport function useServiceHook<C>(input: ServiceHook<C> | symbol, optional?: 'optional') {\r\n  const token = typeof input === 'symbol' ? input : input.token;\r\n  const contextVal = useContext(SERVICE_CONTEXT);\r\n  const depends = contextVal ? contextVal[token] : CACHE_MAP[token];\r\n  if(depends) {\r\n    return depends\r\n  } else if(optional === 'optional') {\r\n    return null\r\n  } else {\r\n    throw new Error(`未找到${name}的依赖值，请在上层servcieComponent中提供对应的service hook`)\r\n  }\r\n}","import { useCallback, useRef } from \"react\";\r\n\r\n/**\r\n * @description 防抖函数\r\n * @param callback 初始回调函数\r\n * @param deps 依赖值\r\n * @param debounceTime 防抖时间\r\n * @returns \r\n */\r\nexport function useDebounceCallback<T extends []>(callback: (...params: T) => void, deps: unknown[], debounceTime: number) {\r\n\r\n  let timer: any;\r\n  const timeRef = useRef(debounceTime);\r\n\r\n  const runner = useCallback(callback, deps);\r\n\r\n  const debouncer = (...params:T) => {\r\n    clearTimeout(timer);\r\n    timeRef.current = debounceTime;    \r\n    const runTimeout = () => {\r\n      return setTimeout(() => {\r\n        if(timeRef.current <= 0) {\r\n          runner(...params);          \r\n        } else {\r\n          timeRef.current = timeRef.current - 1000;\r\n          runTimeout();\r\n        }        \r\n      }, 1000)\r\n    }\r\n    timer = runTimeout();\r\n  }\r\n\r\n  return debouncer;\r\n}","import { useRef } from \"react\";\r\n\r\n/**\r\n * @description 将最近两次变化的值并返回\r\n * @param value s状态变量（建议为useState函数返回的变量）\r\n * @returns 0-当前值 1-上一个值\r\n */\r\nexport function usePrevious<T>(state: T) {\r\n  const prevRef = useRef<T>();\r\n  const curRef = useRef<T>();\r\n\r\n  prevRef.current = curRef.current;\r\n  curRef.current = state;\r\n\r\n  return prevRef.current;\r\n}","import { useState } from \"react\";\r\n\r\n/**\r\n * @description 使用引用类型的状态变量，并返回状态值和状态变更函数\r\n * @param refState \r\n * @returns \r\n */\r\nexport function useRefState<T extends object>(refState: T): [T, (v: Partial<T>) => void] {\r\n  const [state, setState] = useState(refState);\r\n\r\n  const setRefState = (newV: Partial<T>) => {\r\n    setState(oldV => ({ ...oldV, ...newV }));\r\n  }\r\n\r\n  return [state, setRefState]\r\n}","import { useRefState } from \"./useRefState\"\r\n\r\n/**\r\n * @function 将普通对象变为由Proxy包装的代理对象，更新对象中的属性值时，会自动触发setState方法并引起函数式组件重新执行\r\n * @param state 初始对象\r\n * @returns proxy 代理对象\r\n */\r\nexport function useReactive<T extends object>(state: Partial<T> = {}) {\r\n  const [pState, setState] = useRefState(state)\r\n  const proxy = new Proxy(pState, {\r\n    set(target, prop, value) {\r\n      if(target[prop] !== value) {\r\n        const nv = { [prop]: value } as Partial<T>\r\n        setState(nv)\r\n      }\r\n      return true\r\n    },\r\n    get(obj, prop) {\r\n      return obj[prop];\r\n    }\r\n  })\r\n\r\n  return proxy\r\n}","import { useEffect, useRef } from \"react\";\r\nimport { usePrevious } from \"./usePrevious\";\r\n\r\n/**\r\n * @description 状态更新时的副作用函数（忽略组件第一次渲染后的副作用）\r\n * @param callback 要执行的回调函数\r\n * @param deps 状态依赖\r\n */\r\nexport function useUpdateEffect(callback: ((changes?: unknown[]) => () => void) | (() => void), deps: unknown[]) {\r\n  const counter = useRef(0);\r\n  const changesRef = useRef([]) ;\r\n  \r\n  deps.forEach((dep, index) => {\r\n    changesRef.current[index] = usePrevious(dep)\r\n  })\r\n\r\n  useEffect(() => {\r\n    counter.current ++;\r\n    if(counter.current == 1) return;\r\n    return callback(changesRef.current);\r\n  }, deps)\r\n}"],"names":[],"mappings":"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"}